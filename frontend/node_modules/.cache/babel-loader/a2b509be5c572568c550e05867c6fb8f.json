{"ast":null,"code":"var _jsxFileName = \"/media/eudes/Dados/Cursos/SemanaDevSuperior/SDS3/ws-superior/projeto-sds3/frontend/src/components/BarChart/index.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport Chart from 'react-apexcharts';\nimport { round } from 'utils/format';\nimport { BASE_URL } from 'utils/requests';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BarChart() {\n  _s();\n\n  const [chartData, setChartData] = useState({\n    labels: {\n      categories: []\n    },\n    series: [{\n      name: \"\",\n      data: []\n    }]\n  });\n  useEffect(() => {\n    axios.get(`${BASE_URL}/sales/successbyseller`) // ou axios.get(BASE_URL + \"/sales/amountbyseller\")\n    .then(response => {\n      const data = response.data; // casting\n\n      const myLabels = data.map(x => x.sellerName);\n      const mySeries = data.map(x => round(100 * x.deals / x.visited, 1));\n      setChartData({\n        labels: {\n          categories: myLabels\n        },\n        series: [{\n          name: \"% Success\",\n          data: mySeries\n        }]\n      }); // console.log(chartData);\n    });\n  }, []);\n  const options = {\n    plotOptions: {\n      bar: {\n        horizontal: true\n      }\n    }\n  }; // const mockData = {\n  // \tlabels: {\n  // \t\tcategories: ['Anakin', 'Barry Allen', 'Kal-El', 'Logan', 'Padmé']\n  // \t},\n  // \tseries: [\n  // \t\t{\n  // \t\t\tname: \"% Sucesso\",\n  // \t\t\tdata: [43.6, 67.1, 67.7, 45.6, 71.1]\n  // \t\t}\n  // \t]\n  // };\n\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    options: { ...options,\n      xaxis: chartData.labels\n    },\n    series: chartData.series,\n    type: \"bar\",\n    height: \"240\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 3\n  }, this);\n}\n\n_s(BarChart, \"08jGnud6D8HPdqZAhu8Pre2ZhU8=\");\n\n_c = BarChart;\nexport default BarChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"sources":["/media/eudes/Dados/Cursos/SemanaDevSuperior/SDS3/ws-superior/projeto-sds3/frontend/src/components/BarChart/index.tsx"],"names":["axios","useEffect","useState","Chart","round","BASE_URL","BarChart","chartData","setChartData","labels","categories","series","name","data","get","then","response","myLabels","map","x","sellerName","mySeries","deals","visited","options","plotOptions","bar","horizontal","xaxis"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AAEA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,QAAT,QAAyB,gBAAzB;;;AAaA,SAASC,QAAT,GAAoB;AAAA;;AAEnB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAY;AACrDO,IAAAA,MAAM,EAAE;AAAEC,MAAAA,UAAU,EAAE;AAAd,KAD6C;AAErDC,IAAAA,MAAM,EAAE,CAAC;AAAEC,MAAAA,IAAI,EAAE,EAAR;AAAYC,MAAAA,IAAI,EAAE;AAAlB,KAAD;AAF6C,GAAZ,CAA1C;AAKAZ,EAAAA,SAAS,CAAC,MAAM;AACfD,IAAAA,KAAK,CAACc,GAAN,CAAW,GAAET,QAAS,wBAAtB,EAA+C;AAA/C,KACEU,IADF,CACOC,QAAQ,IAAI;AACjB,YAAMH,IAAI,GAAGG,QAAQ,CAACH,IAAtB,CADiB,CAC4B;;AAC7C,YAAMI,QAAQ,GAAGJ,IAAI,CAACK,GAAL,CAASC,CAAC,IAAIA,CAAC,CAACC,UAAhB,CAAjB;AACA,YAAMC,QAAQ,GAAGR,IAAI,CAACK,GAAL,CAASC,CAAC,IAAIf,KAAK,CAAC,MAAMe,CAAC,CAACG,KAAR,GAAgBH,CAAC,CAACI,OAAnB,EAA4B,CAA5B,CAAnB,CAAjB;AAEAf,MAAAA,YAAY,CAAC;AACZC,QAAAA,MAAM,EAAE;AAAEC,UAAAA,UAAU,EAAEO;AAAd,SADI;AAEZN,QAAAA,MAAM,EAAE,CAAC;AAAEC,UAAAA,IAAI,EAAE,WAAR;AAAqBC,UAAAA,IAAI,EAAEQ;AAA3B,SAAD;AAFI,OAAD,CAAZ,CALiB,CASjB;AACA,KAXF;AAYA,GAbQ,EAaN,EAbM,CAAT;AAeA,QAAMG,OAAO,GAAG;AACfC,IAAAA,WAAW,EAAE;AACZC,MAAAA,GAAG,EAAE;AACJC,QAAAA,UAAU,EAAE;AADR;AADO;AADE,GAAhB,CAtBmB,CA8BnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACC,QAAC,KAAD;AACC,IAAA,OAAO,EAAE,EAAE,GAAGH,OAAL;AAAcI,MAAAA,KAAK,EAAErB,SAAS,CAACE;AAA/B,KADV;AAEC,IAAA,MAAM,EAAEF,SAAS,CAACI,MAFnB;AAGC,IAAA,IAAI,EAAC,KAHN;AAIC,IAAA,MAAM,EAAC;AAJR;AAAA;AAAA;AAAA;AAAA,UADD;AAQA;;GAlDQL,Q;;KAAAA,Q;AAoDT,eAAeA,QAAf","sourcesContent":["import axios from 'axios';\nimport { type } from 'os';\nimport { useEffect, useState } from 'react';\nimport Chart from 'react-apexcharts'\nimport { SaleSuccess } from 'types/sale';\nimport { round } from 'utils/format';\nimport { BASE_URL } from 'utils/requests';\n\ntype SeriesData = {\n\tname: string;\n\tdata: number[];\n}\ntype ChartData = {\n\tlabels: {\n\t\tcategories: string[];\n\t};\n\tseries: SeriesData[];\n}\n\nfunction BarChart() {\n\n\tconst [chartData, setChartData] = useState<ChartData>({\n\t\tlabels: { categories: [] },\n\t\tseries: [{ name: \"\", data: [] }]\n\t});\n\n\tuseEffect(() => {\n\t\taxios.get(`${BASE_URL}/sales/successbyseller`) // ou axios.get(BASE_URL + \"/sales/amountbyseller\")\n\t\t\t.then(response => {\n\t\t\t\tconst data = response.data as SaleSuccess[]; // casting\n\t\t\t\tconst myLabels = data.map(x => x.sellerName);\n\t\t\t\tconst mySeries = data.map(x => round(100 * x.deals / x.visited, 1));\n\n\t\t\t\tsetChartData({\n\t\t\t\t\tlabels: { categories: myLabels },\n\t\t\t\t\tseries: [{ name: \"% Success\", data: mySeries }]\n\t\t\t\t});\n\t\t\t\t// console.log(chartData);\n\t\t\t});\n\t}, []);\n\n\tconst options = {\n\t\tplotOptions: {\n\t\t\tbar: {\n\t\t\t\thorizontal: true,\n\t\t\t}\n\t\t},\n\t};\n\n\t// const mockData = {\n\t// \tlabels: {\n\t// \t\tcategories: ['Anakin', 'Barry Allen', 'Kal-El', 'Logan', 'Padmé']\n\t// \t},\n\t// \tseries: [\n\t// \t\t{\n\t// \t\t\tname: \"% Sucesso\",\n\t// \t\t\tdata: [43.6, 67.1, 67.7, 45.6, 71.1]\n\t// \t\t}\n\t// \t]\n\t// };\n\n\treturn (\n\t\t<Chart\n\t\t\toptions={{ ...options, xaxis: chartData.labels }}\n\t\t\tseries={chartData.series}\n\t\t\ttype=\"bar\"\n\t\t\theight=\"240\"\n\t\t/>\n\t);\n}\n\nexport default BarChart;"]},"metadata":{},"sourceType":"module"}